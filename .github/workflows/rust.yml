name: Rust

on:
  pull_request:
    branches:
      - 'develop'
      - 'main'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Restore cargo cache
        id: restore-cargo-cache
        uses: actions/cache/restore@v3
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup rust environment
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo install stable
          rustup update stable
          echo install nightly
          rustup update nightly
          echo set browser wasm target
          rustup target add wasm32-unknown-unknown --toolchain nightly
          echo install tarpaulin
          cargo install cargo-tarpaulin
          echo install dylint
          cargo install cargo-dylint dylint-link
          echo install cargo-contract
          cargo install cargo-contract --version 2.0.0-rc --locked

      - name: Build
        run: |
          cd contracts
          cargo +nightly contract build --verbose --release
      
      - name: Test
        run: |
          cd contracts
          exec 5>&1
          SUMMARY="$(RUST_BACKTRACE=1 cargo +nightly test --no-default-features --features std --verbose -- --nocapture | tee >(cat - >&5))"
          SUMMARY=$(echo $SUMMARY | tail -7 | head -1)
          if [[ ${SUMMARY:0:16} == "test result: ok." ]]; then exit 0; else exit 1; fi

      - name: Save cargo cache
        id: save-cargo-cache
        uses: actions/cache/save@v3
        with:
          path: ~/.cargo
          key: ${{ steps.restore-cargo-cache.outputs.cache-primary-key }}
